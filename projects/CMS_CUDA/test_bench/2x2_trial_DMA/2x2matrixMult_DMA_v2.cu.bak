#include <stdio.h>
#include <string.h>
#include <stdint.h>

#define BYTE_TOTAL 30
#define ATTEMPTS 100

int main (void) {
	printf("Starting HostToDevice Bytes vs. Time Data Collection.......\n");
	//  Initialize parameters
	const uint32_t BYTES[BYTE_TOTAL] = {1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7, 1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15, 1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23, 1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30};
	FILE *outFile;
	for (int i=0; i<BYTE_TOTAL; i++) {
		printf("Beginning Byte Total 2^%i.......\n", i);
		size_t size = BYTES[i]*sizeof(float);
		//  Declare Host variables
		float *a;
		//  Declare Device variables
		float *d_a;
		//  Allocate Host variables
		cudaHostAlloc((void**)&a, size, cudaHostAllocWriteCombined | cudaHostAllocMapped);
		//  Allocate Device variables
		cudaMalloc(&d_a, size);
		//	Get the GPU Pointers
		cudaHostGetDevicePointer(&d_a, a, 0);
		//  Set Host variables
		for (uint32_t j=0; j<BYTES[j]; j++) {
			a[j] = 1;
		}
		//  Initialize Device Event Handeling
		float milli[ATTEMPTS] = {0};
		cudaEvent_t start, stop;
		cudaEventCreate(&start);
		cudaEventCreate(&stop);
		/////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////
		//  Set Device variables
		for (int j=0; j<ATTEMPTS; j++) {
			cudaEventRecord(start);
			cudaMemcpy(d_a, a, size, cudaMemcpyHostToDevice);
			cudaEventRecord(stop);
			cudaEventSynchronize(stop);
			cudaEventElapsedTime(&milli[j], start, stop);
		}
		//	Write Data to File
		char fn[50] = "rawData_bytes_";
		char s_byte[50];
		snprintf(s_byte, 50, "%i", i);
		strcat(fn, s_byte);
		strcat(fn, ".txt");
		outFile = fopen(fn, "a");
		for (int j=0; j<ATTEMPTS; j++) {
			char buffer_0[50];
			snprintf(buffer_0, 50, "%f", milli[j]);
			strcat(buffer_0, ",");
			fputs(buffer_0, outFile);
			char buffer_1[50];
			snprintf(buffer_1, 50, "%i", i);
			strcat(buffer_1, "\n");
			fputs(buffer_1, outFile);
		}
		fclose(outFile);
		//  Deallocate Host variables
		cudaFreeHost(a);
		//  Deallocate Device variables
		cudaFree(d_a);
	}
	/////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////
	return 0;
}
